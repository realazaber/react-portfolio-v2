{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/projects/react-portfolio-v2/src/components/Projects/MoreProjects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\nimport ProjectsData from \"./ProjectsData.json\";\nimport Project from './Project';\nimport Fade from 'react-reveal/Fade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MoreProjects() {\n  _s();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const [category, setCategory] = useState(\"All\");\n  const categories = [];\n  ProjectsData.map((projectInfo, index) => {\n    if (!categories.includes(projectInfo.category)) {\n      categories.push(projectInfo.category);\n    }\n\n    return null;\n  });\n\n  function displayCategory(category) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"projectsCategory\",\n      children: ProjectsData.map((projectInfo, index) => {\n        //If the all option is selected, show all projects.\n        if (category === \"All\") {\n          return /*#__PURE__*/_jsxDEV(Fade, {\n            children: /*#__PURE__*/_jsxDEV(Project, {\n              img: projectInfo.img,\n              altTxt: projectInfo.altTxt,\n              category: projectInfo.category,\n              description: projectInfo.description,\n              linkRepo: projectInfo.linkRepo,\n              linkWebsite: projectInfo.linkWebsite\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this);\n        } //If another category is selected then only show\n        //Projects in that category.\n        else {\n          if (projectInfo.category === category) {\n            return /*#__PURE__*/_jsxDEV(Fade, {\n              children: /*#__PURE__*/_jsxDEV(Project, {\n                img: projectInfo.img,\n                altTxt: projectInfo.altTxt,\n                category: projectInfo.category,\n                description: projectInfo.description,\n                linkRepo: projectInfo.linkRepo,\n                linkWebsite: projectInfo.linkWebsite\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this);\n          } else {\n            return null;\n          }\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"moreProjectsHeading\",\n      children: [/*#__PURE__*/_jsxDEV(Fade, {\n        bottom: true,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"sectionTitlePrimary\",\n          children: \"More projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        id: \"btnBack\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"moreProjectsNav\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"desktopView\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"All\",\n          className: \"btnProjectsNav\",\n          onClick: () => {\n            setCategory(\"All\");\n          },\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), categories.map((category, index) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnProjectsNav\",\n            value: category,\n            onClick: () => {\n              setCategory(category);\n            },\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mobileView\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"categorySelector\",\n        onChange: event => {\n          setCategory(event.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), categories.map((category, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), displayCategory(category)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoreProjects, \"LE9Zg4bHD7lM+WI5kjvP1ve/AU0=\");\n\n_c = MoreProjects;\nexport default MoreProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoreProjects\");","map":{"version":3,"sources":["/opt/lampp/htdocs/projects/react-portfolio-v2/src/components/Projects/MoreProjects.js"],"names":["React","useState","useEffect","Fragment","Link","ProjectsData","Project","Fade","MoreProjects","window","scrollTo","category","setCategory","categories","map","projectInfo","index","includes","push","displayCategory","img","altTxt","description","linkRepo","linkWebsite","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAGA,SAASC,YAAT,GAAwB;AAAA;;AAGpBN,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAFM,EAEJ,EAFI,CAAT;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMY,UAAU,GAAG,EAAnB;AAEAR,EAAAA,YAAY,CAACS,GAAb,CAAiB,CAACC,WAAD,EAAcC,KAAd,KAAwB;AAErC,QAAI,CAACH,UAAU,CAACI,QAAX,CAAoBF,WAAW,CAACJ,QAAhC,CAAL,EAAgD;AAC5CE,MAAAA,UAAU,CAACK,IAAX,CAAgBH,WAAW,CAACJ,QAA5B;AACH;;AACD,WAAQ,IAAR;AAEH,GAPD;;AASA,WAASQ,eAAT,CAAyBR,QAAzB,EAAmC;AAC/B,wBACI;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA,gBAGQN,YAAY,CAACS,GAAb,CAAiB,CAACC,WAAD,EAAcC,KAAd,KAAwB;AAErC;AACA,YAAIL,QAAQ,KAAK,KAAjB,EAAwB;AACpB,8BACI,QAAC,IAAD;AAAA,mCACI,QAAC,OAAD;AAEI,cAAA,GAAG,EAAEI,WAAW,CAACK,GAFrB;AAGI,cAAA,MAAM,EAAEL,WAAW,CAACM,MAHxB;AAII,cAAA,QAAQ,EAAEN,WAAW,CAACJ,QAJ1B;AAKI,cAAA,WAAW,EAAEI,WAAW,CAACO,WAL7B;AAMI,cAAA,QAAQ,EAAEP,WAAW,CAACQ,QAN1B;AAOI,cAAA,WAAW,EAAER,WAAW,CAACS;AAP7B,eACSR,KADT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAcH,SAfD,CAgBA;AACA;AAjBA,aAkBK;AACD,cAAID,WAAW,CAACJ,QAAZ,KAAyBA,QAA7B,EAAuC;AACnC,gCACI,QAAC,IAAD;AAAA,qCACI,QAAC,OAAD;AAEI,gBAAA,GAAG,EAAEI,WAAW,CAACK,GAFrB;AAGI,gBAAA,MAAM,EAAEL,WAAW,CAACM,MAHxB;AAII,gBAAA,QAAQ,EAAEN,WAAW,CAACJ,QAJ1B;AAKI,gBAAA,WAAW,EAAEI,WAAW,CAACO,WAL7B;AAMI,gBAAA,QAAQ,EAAEP,WAAW,CAACQ,QAN1B;AAOI,gBAAA,WAAW,EAAER,WAAW,CAACS;AAP7B,iBACSR,KADT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ;AAaH,WAdD,MAeK;AACD,mBAAO,IAAP;AACH;AACJ;AACJ,OAzCD;AAHR;AAAA;AAAA;AAAA;AAAA,YADJ;AAmDH;;AAGD,sBAEI,QAAC,QAAD;AAAA,4BAEI;AAAK,MAAA,EAAE,EAAC,qBAAR;AAAA,8BAEI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,EAAE,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAgBI;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA,6BACI;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAoB,UAAA,SAAS,EAAC,gBAA9B;AAA+C,UAAA,OAAO,EAAE,MAAM;AAACJ,YAAAA,WAAW,CAAC,KAAD,CAAX;AAAmB,WAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKQC,UAAU,CAACC,GAAX,CAAe,CAACH,QAAD,EAAWK,KAAX,KAAqB;AAChC,8BACI;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAmC,YAAA,KAAK,EAAEL,QAA1C;AAAoD,YAAA,OAAO,EAAE,MAAM;AAACC,cAAAA,WAAW,CAACD,QAAD,CAAX;AAAsB,aAA1F;AAAA,sBACKA;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAND,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAkCI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA,6BACI;AAAQ,QAAA,EAAE,EAAC,kBAAX;AAA8B,QAAA,QAAQ,EAAGc,KAAD,IAAW;AAACb,UAAAA,WAAW,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AAAgC,SAApF;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAQQd,UAAU,CAACC,GAAX,CAAe,CAACH,QAAD,EAAWK,KAAX,KAAqB;AAChC,8BACI;AAAQ,YAAA,KAAK,EAAEL,QAAf;AAAA,sBACKA;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAND,CARR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlCJ,EAyDQQ,eAAe,CAACR,QAAD,CAzDvB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgEH;;GA3IQH,Y;;KAAAA,Y;AA6IT,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport ProjectsData from \"./ProjectsData.json\";\nimport Project from './Project';\nimport Fade from 'react-reveal/Fade';\n\n\nfunction MoreProjects() {\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n      }, [])\n\n    const [category, setCategory] = useState(\"All\");\n\n    const categories = [];\n\n    ProjectsData.map((projectInfo, index) => {\n                            \n        if (!categories.includes(projectInfo.category)) {\n            categories.push(projectInfo.category);\n        }\n        return (null);\n        \n    })\n\n    function displayCategory(category) {\n        return (\n            <div id=\"projectsCategory\">\n                \n                {\n                    ProjectsData.map((projectInfo, index) => {\n\n                        //If the all option is selected, show all projects.\n                        if (category === \"All\") {\n                            return (\n                                <Fade>\n                                    <Project\n                                        key={index}\n                                        img={projectInfo.img}\n                                        altTxt={projectInfo.altTxt}\n                                        category={projectInfo.category}\n                                        description={projectInfo.description}\n                                        linkRepo={projectInfo.linkRepo}\n                                        linkWebsite={projectInfo.linkWebsite} \n                                    /> \n                                </Fade>\n                                \n                            )\n                        }\n                        //If another category is selected then only show\n                        //Projects in that category.\n                        else {\n                            if (projectInfo.category === category) {\n                                return (\n                                    <Fade>\n                                        <Project\n                                            key={index}\n                                            img={projectInfo.img}\n                                            altTxt={projectInfo.altTxt}\n                                            category={projectInfo.category}\n                                            description={projectInfo.description}\n                                            linkRepo={projectInfo.linkRepo}\n                                            linkWebsite={projectInfo.linkWebsite} \n                                        />  \n                                    </Fade>\n                                )\n                            }\n                            else {\n                                return(null);\n                            }\n                        }\n                    })\n\n                }\n            \n            </div>\n        )\n    }\n   \n\n    return (\n\n        <Fragment>            \n\n            <div id=\"moreProjectsHeading\">\n\n                <Fade bottom>\n                    <h1 className=\"sectionTitlePrimary\">\n                        More projects\n                    </h1>\n                </Fade>\n                <Link to=\"/\" id=\"btnBack\">\n                    Back\n                </Link>\n            </div>\n\n\n            {/* Load all projects */}\n            <div id=\"moreProjectsNav\">\n                <div id=\"desktopView\">\n                    <button value=\"All\" className=\"btnProjectsNav\" onClick={() => {setCategory(\"All\")}}>\n                        All\n                    </button>\n                    {\n                        categories.map((category, index) => {\n                            return (\n                                <button className=\"btnProjectsNav\" value={category} onClick={() => {setCategory(category)}}>\n                                    {category}\n                                </button>\n                            )\n                        })                                                \n                    }\n\n\n                </div>\n            </div>\n            <div id=\"mobileView\">\n                <select id=\"categorySelector\" onChange={(event) => {setCategory(event.target.value)}}>\n                    <option value=\"All\">\n                        \n                            All projects\n                        \n                        \n                    </option>\n                    {\n                        categories.map((category, index) => {\n                            return (\n                                <option value={category}>\n                                    {category}\n                                </option>\n                            )\n                        })\n\n                        \n                    }\n\n                </select>\n            </div>\n            {\n                displayCategory(category)\n            }\n\n        </Fragment>\n    )\n}\n\nexport default MoreProjects\n"]},"metadata":{},"sourceType":"module"}