{"ast":null,"code":"import _slicedToArray from\"/home/swagoverlord/Desktop/react-portfolio-v2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,Fragment}from'react';import{Link}from\"react-router-dom\";import ProjectsData from\"./ProjectsData.json\";import Project from'./Project';import Fade from'react-reveal/Fade';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MoreProjects(){useEffect(function(){window.scrollTo(0,0);},[]);var _useState=useState(\"All\"),_useState2=_slicedToArray(_useState,2),category=_useState2[0],setCategory=_useState2[1];var categories=[];ProjectsData.map(function(projectInfo,index){if(!categories.includes(projectInfo.category)){categories.push(projectInfo.category);}return null;});function displayCategory(category){return/*#__PURE__*/_jsx(\"div\",{id:\"projectsCategory\",children:ProjectsData.map(function(projectInfo,index){//If the all option is selected, show all projects.\nif(category===\"All\"){return/*#__PURE__*/_jsx(Fade,{children:/*#__PURE__*/_jsx(Project,{img:projectInfo.img,altTxt:projectInfo.altTxt,category:projectInfo.category,description:projectInfo.description,linkRepo:projectInfo.linkRepo,linkWebsite:projectInfo.linkWebsite},index)});}//If another category is selected then only show\n//Projects in that category.\nelse{if(projectInfo.category===category){return/*#__PURE__*/_jsx(Fade,{children:/*#__PURE__*/_jsx(Project,{img:projectInfo.img,altTxt:projectInfo.altTxt,category:projectInfo.category,description:projectInfo.description,linkRepo:projectInfo.linkRepo,linkWebsite:projectInfo.linkWebsite},index)});}else{return null;}}})});}return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"moreProjectsHeading\",children:[/*#__PURE__*/_jsx(Fade,{bottom:true,children:/*#__PURE__*/_jsx(\"h1\",{className:\"sectionTitlePrimary\",children:\"More projects\"})}),/*#__PURE__*/_jsx(Link,{to:\"/\",id:\"btnBack\",children:\"Back\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"moreProjectsNav\",children:/*#__PURE__*/_jsxs(\"div\",{id:\"desktopView\",children:[/*#__PURE__*/_jsx(\"button\",{value:\"All\",className:\"btnProjectsNav\",onClick:function onClick(){setCategory(\"All\");},children:\"All\"}),categories.map(function(category,index){return/*#__PURE__*/_jsx(\"button\",{className:\"btnProjectsNav\",value:category,onClick:function onClick(){setCategory(category);},children:category});})]})}),/*#__PURE__*/_jsx(\"div\",{id:\"mobileView\",children:/*#__PURE__*/_jsxs(\"select\",{id:\"categorySelector\",onChange:function onChange(event){setCategory(event.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"All\",children:\"All projects\"}),categories.map(function(category,index){return/*#__PURE__*/_jsx(\"option\",{value:category,children:category});})]})}),displayCategory(category)]});}export default MoreProjects;","map":{"version":3,"sources":["/home/swagoverlord/Desktop/react-portfolio-v2/src/components/Projects/MoreProjects.js"],"names":["React","useState","useEffect","Fragment","Link","ProjectsData","Project","Fade","MoreProjects","window","scrollTo","category","setCategory","categories","map","projectInfo","index","includes","push","displayCategory","img","altTxt","description","linkRepo","linkWebsite","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport ProjectsData from \"./ProjectsData.json\";\nimport Project from './Project';\nimport Fade from 'react-reveal/Fade';\n\n\nfunction MoreProjects() {\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n      }, [])\n\n    const [category, setCategory] = useState(\"All\");\n\n    const categories = [];\n\n    ProjectsData.map((projectInfo, index) => {\n                            \n        if (!categories.includes(projectInfo.category)) {\n            categories.push(projectInfo.category);\n        }\n        return (null);\n        \n    })\n\n    function displayCategory(category) {\n        return (\n            <div id=\"projectsCategory\">\n                \n                {\n                    ProjectsData.map((projectInfo, index) => {\n\n                        //If the all option is selected, show all projects.\n                        if (category === \"All\") {\n                            return (\n                                <Fade>\n                                    <Project\n                                        key={index}\n                                        img={projectInfo.img}\n                                        altTxt={projectInfo.altTxt}\n                                        category={projectInfo.category}\n                                        description={projectInfo.description}\n                                        linkRepo={projectInfo.linkRepo}\n                                        linkWebsite={projectInfo.linkWebsite} \n                                    /> \n                                </Fade>\n                                \n                            )\n                        }\n                        //If another category is selected then only show\n                        //Projects in that category.\n                        else {\n                            if (projectInfo.category === category) {\n                                return (\n                                    <Fade>\n                                        <Project\n                                            key={index}\n                                            img={projectInfo.img}\n                                            altTxt={projectInfo.altTxt}\n                                            category={projectInfo.category}\n                                            description={projectInfo.description}\n                                            linkRepo={projectInfo.linkRepo}\n                                            linkWebsite={projectInfo.linkWebsite} \n                                        />  \n                                    </Fade>\n                                )\n                            }\n                            else {\n                                return(null);\n                            }\n                        }\n                    })\n\n                }\n            \n            </div>\n        )\n    }\n   \n\n    return (\n\n        <Fragment>            \n\n            <div id=\"moreProjectsHeading\">\n\n                <Fade bottom>\n                    <h1 className=\"sectionTitlePrimary\">\n                        More projects\n                    </h1>\n                </Fade>\n                <Link to=\"/\" id=\"btnBack\">\n                    Back\n                </Link>\n            </div>\n\n\n            {/* Load all projects */}\n            <div id=\"moreProjectsNav\">\n                <div id=\"desktopView\">\n                    <button value=\"All\" className=\"btnProjectsNav\" onClick={() => {setCategory(\"All\")}}>\n                        All\n                    </button>\n                    {\n                        categories.map((category, index) => {\n                            return (\n                                <button className=\"btnProjectsNav\" value={category} onClick={() => {setCategory(category)}}>\n                                    {category}\n                                </button>\n                            )\n                        })                                                \n                    }\n\n\n                </div>\n            </div>\n            <div id=\"mobileView\">\n                <select id=\"categorySelector\" onChange={(event) => {setCategory(event.target.value)}}>\n                    <option value=\"All\">\n                        \n                            All projects\n                        \n                        \n                    </option>\n                    {\n                        categories.map((category, index) => {\n                            return (\n                                <option value={category}>\n                                    {category}\n                                </option>\n                            )\n                        })\n\n                        \n                    }\n\n                </select>\n            </div>\n            {\n                displayCategory(category)\n            }\n\n        </Fragment>\n    )\n}\n\nexport default MoreProjects\n"]},"metadata":{},"sourceType":"module"}